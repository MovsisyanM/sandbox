knitr::opts_chunk$set(echo = TRUE)
data(gapminder)
knitr::include_graphics('NYC-weather.png')
knitr::include_graphics("World-health-gapminder.png")
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(knitr)
library(dslabs)
data(gapminder)
View(gapminder)
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(knitr)
library(dslabs)
knitr::include_graphics('NYC-weather.png')
knitr::include_graphics("World-health-gapminder.png")
data(gapminder)
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(knitr)
library(dslabs)
knitr::include_graphics('NYC-weather.png')
knitr::include_graphics("World-health-gapminder.png")
data(gapminder)
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(knitr)
library(dslabs)
install.packages(dslabs)
install.packages("dslabs")
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(knitr)
library(dslabs)
knitr::include_graphics("World-health-gapminder.png")
data(gapminder)
force(gapminder)
View(gapminder)
library(gganimate)
library(png)
library(gifski)
data(gapminder)
ggplot(gapminder, aes(gdp, life_expectancy, size = population, color = continent)) +
geom_point() +
#scale_x_log10() +
#theme_bw() +
labs(title = 'Year: {frame_time}', x = 'GDP Per Capita', y = 'Life Expectancy') +
transition_time(year) +
ease_aes('linear')
# Save at gif:
anim_save("271-ggplot2-animated-gif-chart-with-gganimate1.gif")
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(knitr)
library(dslabs)
df <- read.csv("Ukraine-Russia War Graphics  - Biggest Oil Producers.csv")
df <- read.csv("Ukraine-RussiaWarGraphics-BiggestOilProducers.csv")
knitr::opts_chunk$set(echo = TRUE)
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(knitr)
library(dslabs)
df <- read.csv("Ukraine-Russia WarGraphics-BiggestOil Producers.csv")
df
View(df)
df <- df[4: 100]
df <- head(df, 100)
df <- tail(df, 97)
df <- read.csv("Ukraine-Russia WarGraphics-BiggestOil Producers.csv")
df <- head(df, 100)
df <- tail(df, 97)
library(treemap)
install.packages("treemap")
library(treemap)
df.cols
colnames(df)
library(treemap)
treemap(df,
index=df["graphic.here..https...geni.us.Russia.Ukraine.Viz"],
vSize = df["X1"],
type="index",
palette = "Yellows",
title="World's Leading Natural Gas Producers",
fontsize.title = 14
)
df[0]
df[4]
df[5, ]
treemap(df,
index=df["graphic.here..https...geni.us.Russia.Ukraine.Viz"],
# vSize = df["X1"],
type="index",
palette = "Yellows",
title="World's Leading Natural Gas Producers",
fontsize.title = 14
)
install.packages("treemapify")
library(treemapify)
columns(df)
df$name
colnames(df)
ggplot(df, aes(area = X.1, fill = graphic.here..https...geni.us.Russia.Ukraine.Viz)) +
geom_treemap()
df <- read.csv("Ukraine-Russia WarGraphics-BiggestOil Producers.csv")
df <- read.csv("Ukraine-Russia WarGraphics-BiggestOil Producers.csv")
df <- read.csv("Ukraine-Russia WarGraphics-BiggestOil Producers.csv")
df <- read.csv("Ukraine-Russia WarGraphics-BiggestOil Producers.csv")
df <- read.csv("Ukraine-Russia WarGraphics-BiggestOil Producers.csv")
df <- read.csv("Ukraine-Russia WarGraphics-BiggestOil Producers.csv")
df <- read.csv("Ukraine-RussiaWarGraphics-BiggestOil Producers.csv")
df <- read.csv("Ukraine-RussiaWarGraphics-BiggestOilProducers.csv")
df <- head(df, 100)
df <- tail(df, 97)
df <- df %>% rename("graphic.here..https...geni.us.Russia.Ukraine.Viz" = "group")
df <- df %>% rename("group" = "graphic.here..https...geni.us.Russia.Ukraine.Viz")
df <- df %>% rename("value" = "X.1")
ggplot(df, aes(area = value, fill = group)) +
geom_treemap()
df$value<-gsub("%","",as.character(df1$value))
df$value<-gsub("%","",as.character(df$value))
df$value <- as.numeric(df$value)
ggplot(df, aes(area = value, fill = group)) +
geom_treemap()
df <- df %>% filter(value >= 1)
ggplot(df, aes(area = value, fill = group)) +
geom_treemap()
ggplot(df, aes(area = value, fill = group, color = value)) +
geom_treemap()
ggplot(df, aes(area = value, fill = group)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "corner",
size = 10)
ggplot(df, aes(area = value, fill = group)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "center",
size = 10)
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "center",
size = 10)
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "corner",
size = 10)
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "center",
size = 10)
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n")),
show.legend = FALSE) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "center",
size = 10)
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"), show.legend = FALSE)) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "center",
size = 10)
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "center",
size = 10) +
theme(legend.position="none")
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "center",
size = 10) +
scale_fill_brewer(palette = "Blues") +
theme(legend.position="none")
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "center",
size = 10) +
scale_fill_brewer(palette = "Yellows") +
theme(legend.position="none")
ggplot(df, aes(area = value, fill = group, palette = "Set1",
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
place = "center",
size = 10) +
theme(legend.position="none")
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
#place = "center",
size = 10) +
theme(legend.position="none")
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
size = 10) +
theme(legend.position="none") +
scale_fill_brewer(palette = c("#FFFFFF"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
size = 10) +
theme(legend.position="none") +
scale_fill_brewer(palette = c("YIOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap() +
geom_treemap_text(colour = "white",
size = 10) +
theme(legend.position="none") +
scale_fill_brewer(palette = "YIOrBr")
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
library(RColorBrewer)
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n")),
fill = getPalette(colourCount)) +
geom_treemap() +
geom_treemap_text(colour = "white",
size = 10) +
theme(legend.position="none") #+
#scale_fill_brewer(palette = "YIOrBr")
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(colour = "white",
size = 10) +
theme(legend.position="none") #+
#scale_fill_brewer(palette = "YIOrBr")
display.brewer.all()
display.brewer.all()
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrRd"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(colour = "white",
size = 10) +
theme(legend.position="none") #+
#scale_fill_brewer(palette = "YIOrBr")
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(colour = "white",
size = 10) +
theme(legend.position="none") #+
#scale_fill_brewer(palette = "YIOrBr")
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(#colour = "white",
size = 10) +
theme(legend.position="none")
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(colour = "white",
size = 10) +
theme(legend.position="none")
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none")
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text() +
theme(legend.position="none")
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none")
display.brewer.all()
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none") +
geom_tile("World's Leading Natural Gas Producers")
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none") +
geom_tile("World's Leading Natural Gas Producers")
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none") +
geom_title("World's Leading Natural Gas Producers")
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none") +
ggtitle("World's Leading Natural Gas Producers")
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none") +
ggtitle("World's Leading Natural Gas Producers")
NYC <- read.csv('NYC-weather.csv')
NYC$date = as.POSIXct(NYC$date, format="%m/%d/%Y" )
dates_list<-c('January','February','March','April','May','June','July','August','September','October','November','December')
NYC %>% summarize(mact = mean(actual_mean_temp), mavt = mean((average_min_temp+average_max_temp)/2)) %>%
stack() %>%
ggplot(aes(ind,values)) + geom_col(aes(fill=ind)) + scale_x_discrete(labels=c('2014','Normal')) +
scale_fill_manual(values=c('gray','#333333'))+labs(title='Annual temperature') +
scale_y_continuous(expand=c(0,0), breaks=seq(0,59,15), limits = c(0,58))+
theme(panel.grid.major.y = element_line(colour='gray'),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_line(colour='gray'),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(colour = "#666666", fill=NA, size=1),
axis.ticks = element_blank(),
axis.text.y = element_text(vjust=0),
panel.spacing = unit(-0.1, 'lines'),
legend.position = 'none',
plot.title = element_text(hjust = 0.5, size=12),
axis.title = element_blank(),
strip.text.x = element_blank()) -> at
NYC %>% summarize(mact = mean(actual_mean_temp), mavt = mean((average_min_temp+average_max_temp)/2)) %>%
stack() %>%
ggplot(aes(ind,values)) + geom_col(aes(fill=ind)) + scale_x_discrete(labels=c('2014','Normal')) +
scale_fill_manual(values=c('gray','#333333'))+labs(title='Annual temperature') +
scale_y_continuous(expand=c(0,0), breaks=seq(0,59,15), limits = c(0,58))+
theme(panel.grid.major.y = element_line(colour='gray'),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_line(colour='gray'),
panel.grid.major.x = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(colour = "#666666", fill=NA, size=1),
axis.ticks = element_blank(),
axis.text.y = element_text(vjust=0),
panel.spacing = unit(-0.1, 'lines'),
legend.position = 'none',
plot.title = element_text(hjust = 0.5, size=12),
axis.title = element_blank(),
strip.text.x = element_blank()) -> at
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(knitr)
library(dslabs)
df <- read.csv("Ukraine-RussiaWarGraphics-BiggestOilProducers.csv")
df <- head(df, 100)
df <- tail(df, 97)
df <- df %>% rename("group" = "graphic.here..https...geni.us.Russia.Ukraine.Viz")
df <- df %>% rename("value" = "X.1")
df$value <- gsub("%","",as.character(df$value))
df$value <- as.numeric(df$value)
df <- df %>% filter(value >= 1)
# reference of the visualization
# https://informationisbeautiful.net/visualizations/ukraine-russian-war-infographics-data-visuals/
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none") +
ggtitle("World's Leading Natural Gas Producers")
df <- read.csv("Ukraine-RussiaWarGraphics-BiggestOilProducers.csv")
df <- head(df, 100)
df <- tail(df, 97)
df <- df %>% rename("group" = "graphic.here..https...geni.us.Russia.Ukraine.Viz")
df <- df %>% rename("value" = "X.1")
df$value <- gsub("%","",as.character(df$value))
df$value <- as.numeric(df$value)
df <- df %>% filter(value >= 1)
# reference of the visualization
# https://informationisbeautiful.net/visualizations/ukraine-russian-war-infographics-data-visuals/
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none") +
ggtitle("World's Leading Natural Gas Producers")
df <- read.csv("Ukraine-RussiaWarGraphics-BiggestOilProducers.csv")
df <- head(df, 100)
df <- tail(df, 97)
df <- df %>% rename("group" = "graphic.here..https...geni.us.Russia.Ukraine.Viz")
df <- df %>% rename("value" = "X.1")
df$value <- gsub("%","",as.character(df$value))
df$value <- as.numeric(df$value)
df <- df %>% filter(value >= 1)
# reference of the visualization
# https://informationisbeautiful.net/visualizations/ukraine-russian-war-infographics-data-visuals/
colourCount = length(unique(df$group))
getPalette = colorRampPalette(brewer.pal(9, "YlOrBr"))
ggplot(df, aes(area = value, fill = group,
label = paste(group, value, sep = "\n"))) +
geom_treemap(fill = getPalette(colourCount)) +
geom_treemap_text(size = 10) +
theme(legend.position="none") +
ggtitle("World's Leading Natural Gas Producers")
