# build: Union[PipelineBuildBase, UUID, NoneType]
# enable_artifact_metadata: Optional[bool]
# enable_artifact_visualization: Optional[bool]
# enable_cache: Optional[bool]
# enable_step_logs: Optional[bool]
# extra: Mapping[str, Any]
# model_version:
#   audience: Optional[str]
#   description: Optional[str]
#   ethics: Optional[str]
#   license: Optional[str]
#   limitations: Optional[str]
#   name: str
#   save_models_to_registry: bool
#   suppress_class_validation_warnings: bool
#   tags: Optional[List[str]]
#   trade_offs: Optional[str]
#   use_cases: Optional[str]
#   version: Union[ModelStages, int, str, NoneType]
#   was_created_in_this_run: bool
# parameters: Optional[Mapping[str, Any]]
# run_name: Optional[str]
# schedule:
#   catchup: bool
#   cron_expression: Optional[str]
#   end_time: Optional[datetime]
#   interval_second: Optional[timedelta]
#   name: Optional[str]
#   start_time: Optional[datetime]
# settings:
#   docker:
#     apt_packages: List[str]
#     build_context_root: Optional[str]
#     build_options: Mapping[str, Any]
#     copy_files: bool
#     copy_global_config: bool
#     dockerfile: Optional[str]
#     dockerignore: Optional[str]
#     environment: Mapping[str, Any]
#     install_stack_requirements: bool
#     parent_image: Optional[str]
#     replicate_local_python_environment: Union[List[str], PythonEnvironmentExportMethod,
#       NoneType]
#     required_hub_plugins: List[str]
#     required_integrations: List[str]
#     requirements: Union[NoneType, str, List[str]]
#     skip_build: bool
#     source_files: SourceFileMode
#     target_repository: str
#     user: Optional[str]
#   resources:
#     cpu_count: Optional[PositiveFloat]
#     gpu_count: Optional[NonNegativeInt]
#     memory: Optional[ConstrainedStrValue]
# steps:
#   load_data:
#     enable_artifact_metadata: Optional[bool]
#     enable_artifact_visualization: Optional[bool]
#     enable_cache: Optional[bool]
#     enable_step_logs: Optional[bool]
#     experiment_tracker: Optional[str]
#     extra: Mapping[str, Any]
#     failure_hook_source:
#       attribute: Optional[str]
#       module: str
#       type: SourceType
#     model_version:
#       audience: Optional[str]
#       description: Optional[str]
#       ethics: Optional[str]
#       license: Optional[str]
#       limitations: Optional[str]
#       name: str
#       save_models_to_registry: bool
#       suppress_class_validation_warnings: bool
#       tags: Optional[List[str]]
#       trade_offs: Optional[str]
#       use_cases: Optional[str]
#       version: Union[ModelStages, int, str, NoneType]
#       was_created_in_this_run: bool
#     name: Optional[str]
#     outputs:
#       output:
#         default_materializer_source:
#           attribute: Optional[str]
#           module: str
#           type: SourceType
#         materializer_source: Optional[Tuple[Source, ...]]
#     parameters: {}
#     settings:
#       docker:
#         apt_packages: List[str]
#         build_context_root: Optional[str]
#         build_options: Mapping[str, Any]
#         copy_files: bool
#         copy_global_config: bool
#         dockerfile: Optional[str]
#         dockerignore: Optional[str]
#         environment: Mapping[str, Any]
#         install_stack_requirements: bool
#         parent_image: Optional[str]
#         replicate_local_python_environment: Union[List[str], PythonEnvironmentExportMethod,
#           NoneType]
#         required_hub_plugins: List[str]
#         required_integrations: List[str]
#         requirements: Union[NoneType, str, List[str]]
#         skip_build: bool
#         source_files: SourceFileMode
#         target_repository: str
#         user: Optional[str]
#       resources:
#         cpu_count: Optional[PositiveFloat]
#         gpu_count: Optional[NonNegativeInt]
#         memory: Optional[ConstrainedStrValue]
#     step_operator: Optional[str]
#     success_hook_source:
#       attribute: Optional[str]
#       module: str
#       type: SourceType
#   train_model:
#     enable_artifact_metadata: Optional[bool]
#     enable_artifact_visualization: Optional[bool]
#     enable_cache: Optional[bool]
#     enable_step_logs: Optional[bool]
#     experiment_tracker: Optional[str]
#     extra: Mapping[str, Any]
#     failure_hook_source:
#       attribute: Optional[str]
#       module: str
#       type: SourceType
#     model_version:
#       audience: Optional[str]
#       description: Optional[str]
#       ethics: Optional[str]
#       license: Optional[str]
#       limitations: Optional[str]
#       name: str
#       save_models_to_registry: bool
#       suppress_class_validation_warnings: bool
#       tags: Optional[List[str]]
#       trade_offs: Optional[str]
#       use_cases: Optional[str]
#       version: Union[ModelStages, int, str, NoneType]
#       was_created_in_this_run: bool
#     name: Optional[str]
#     outputs: {}
#     parameters: {}
#     settings:
#       docker:
#         apt_packages: List[str]
#         build_context_root: Optional[str]
#         build_options: Mapping[str, Any]
#         copy_files: bool
#         copy_global_config: bool
#         dockerfile: Optional[str]
#         dockerignore: Optional[str]
#         environment: Mapping[str, Any]
#         install_stack_requirements: bool
#         parent_image: Optional[str]
#         replicate_local_python_environment: Union[List[str], PythonEnvironmentExportMethod,
#           NoneType]
#         required_hub_plugins: List[str]
#         required_integrations: List[str]
#         requirements: Union[NoneType, str, List[str]]
#         skip_build: bool
#         source_files: SourceFileMode
#         target_repository: str
#         user: Optional[str]
#       resources:
#         cpu_count: Optional[PositiveFloat]
#         gpu_count: Optional[NonNegativeInt]
#         memory: Optional[ConstrainedStrValue]
#     step_operator: Optional[str]
#     success_hook_source:
#       attribute: Optional[str]
#       module: str
#       type: SourceType
